// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") 
   relationMode = "prisma"
}
model Store{
  id String @id @default(uuid())
  name String
  userId String
billboards Billboard[]@relation("StoreToBillboard")
categories Category[]@relation("StoreToCategory")
 sizes           Size[]     @relation("StoreToSize")
 colors          Color[]     @relation("StoreToColor")
 products        Product[]  @relation("StoreToProduct")
  orders          Order[]     @relation("StoreToOrder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Billboard {
  id          String @id @default(uuid())
  storeid     String
  store       Store @relation("StoreToBillboard", fields: [storeid], references: [id])
  label       String
  imageUrl    String
categories Category[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@index([storeid])

  
}
model Category{
  id String @id @default(uuid())
  storeid     String
  store       Store @relation("StoreToCategory", fields: [storeid], references: [id])
   billboardId String      // Foreign Key to Billboard
  billboard   Billboard   @relation(fields: [billboardId], references: [id]) 
  products        Product[]  @relation("CategoryToProduct")
  name String
   createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
 
  @@index([storeid])
  @@index([billboardId])
}
model Size{
  id String @id @default(uuid())
  storeid String
  store       Store     @relation("StoreToSize", fields: [storeid], references: [id])
   products    Product[]
  name        String
  value       String
   createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
 
  @@index([storeid])
  
}

model Color{
  id String @id @default(uuid())
  storeid String
  store       Store     @relation("StoreToColor", fields: [storeid], references: [id])
   products    Product[]
  name        String
  value       String
   createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
 
  @@index([storeid])
  
}
model Product {
  id          String    @id @default(uuid())
  storeid     String    // Foreign Key to Store
  store       Store     @relation("StoreToProduct", fields: [storeid], references: [id])
  categoryId  String    // Foreign Key to Category
  category    Category  @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name        String
  price       Decimal
  isFeatured  Boolean   @default(false)
  isArchived  Boolean   @default(false)
  sizeId      String    // Foreign Key to Size
  size        Size      @relation(fields: [sizeId], references: [id])
  colorId     String    // Foreign Key to Color
  color       Color     @relation(fields: [colorId], references: [id])
   images      Image[]   // Relation to Image model
     orderItems  OrderItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
 
  @@index([storeid]) 
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}
model Image {
  id          String   @id @default(uuid())
  productId   String   // Foreign Key to Product
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url         String   // URL of the image
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([productId])
}
model Order{
  id String @id @default(uuid())
  storeid String
  store Store @relation("StoreToOrder",fields: [storeid],references: [id])
orderItems OrderItem[]
isPaid Boolean @default(false)
phone      String    @default("")
  address    String    @default("")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

@@index([storeid])
}
model OrderItem{
  id String @id @default(uuid())
   orderId   String  // Foreign Key to Order
  order     Order   @relation(fields: [orderId], references: [id])
  productId String  // Foreign Key to Product
  product   Product @relation(fields: [productId], references: [id])
  
  @@index([orderId])
  @@index([productId])
}